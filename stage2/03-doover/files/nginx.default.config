# HTTP Server (Port 80)
server {
    listen 80;
    server_name your-domain.com;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS Server (Port 443)
server {
    listen 443 ssl;
    server_name _;

    ssl_certificate /etc/nginx/ssl/self-signed.crt;
    ssl_certificate_key /etc/nginx/ssl/self-signed.key;

    # Proxy all traffic to the Cockpit interface
    location / {
        proxy_pass https://127.0.0.1:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        #proxy_set_header X-Forwarded-Proto https;

     	# Allow WebSocket connections
    	proxy_http_version 1.1;
    	proxy_set_header Upgrade $http_upgrade;
    	proxy_set_header Connection "upgrade";

	    # Disable buffering for WebSocket compatibility
        proxy_buffering off;

        # Increase timeouts for long-lived connections
        proxy_read_timeout 3600;
        proxy_send_timeout 3600;

        # Optional: Disable SSL verification if using Cockpit with self-signed certificates
        proxy_ssl_verify off;

    }

    # Proxy /raspap/ endpoint to RaspAP management portal
    location /raspap/ {
        proxy_pass https://127.0.0.1:9000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        ## Adjust relative URLs in RaspAP responses
        #sub_filter 'href="/' 'href="/raspap/';
        #sub_filter 'src="/' 'src="/raspap/';
        #sub_filter_once off;
    }

    # Optional: Error handling
    #error_page 404 /404.html;
    #location = /404.html {
    #    internal;
    #}
}